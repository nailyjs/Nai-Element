{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "summary": "主页",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              }
            }
          }
        },
        "tags": ["测试"]
      }
    },
    "/login/username/password": {
      "post": {
        "operationId": "LoginController_loginByUsernamePassword",
        "summary": "通过用户名密码登录",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginByUsernamePasswordDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "登录成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginByUsernamePasswordOKResponseDTO"
                }
              }
            }
          }
        },
        "tags": ["登录"]
      }
    },
    "/register/email/password": {
      "post": {
        "operationId": "RegisterController_registerByEmailPassword",
        "summary": "通过邮箱密码注册",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterByEmailPasswordBodyDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["注册"]
      }
    },
    "/transport/email": {
      "post": {
        "operationId": "EmailController_sendEmailVerifyCode",
        "summary": "发送邮箱验证码",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailVerifyCodeBodyDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "发送成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendEmailVerifyCode201ResDTO"
                }
              }
            }
          },
          "429": {
            "description": "请求过于频繁 目前后端限制的是每60秒最多5次 后端虽然兜了底但是仍请前端自行做好限制",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendEmailVerifyCode429ResDTO"
                }
              }
            }
          }
        },
        "tags": ["传输"]
      }
    },
    "/user/logging": {
      "get": {
        "operationId": "UserController_getLoggingUser",
        "summary": "获取已登录用户信息",
        "parameters": [],
        "responses": {
          "200": {
            "description": "获取已登录用户信息成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLoggingUser200ResDTO"
                }
              }
            }
          }
        },
        "tags": ["用户"]
      }
    }
  },
  "info": {
    "title": "Passport",
    "description": "#### 一些可以公开的情报\n\n- 本项目所有接口均限流，每个接口每分钟最多只能调用 300 次，超过限制会返回 429 Too Many Requests 错误；\n- 本项目需要鉴权的接口均需要携带 `Authorization` 头，其值为 `Bearer <access_token>`，其中 `<access_token>` 为通过登录接口获取的JWT令牌；\n- 本项目的 JWT 令牌有效期为 30 天，过期后需要重新登录；\n- 本页面支持直接测试已登录接口，点击下面的`Authorize`按钮，输入您的JWT令牌即可直接测试接口（不需要携带`Bearer `）。\n",
    "version": "0.0.0",
    "contact": {
      "name": "Zero",
      "url": "https://naily.cc",
      "email": "gczgroup@qq.com"
    },
    "license": {
      "name": "UNLICENSED",
      "url": null
    }
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "LoginByUsernamePasswordDTO": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "用户名"
          },
          "password": {
            "type": "string",
            "description": "密码"
          }
        },
        "required": ["username", "password"]
      },
      "LoginByUsernamePasswordDataUserOKResponseDTO": {
        "type": "object",
        "properties": {
          "userID": {
            "type": "number",
            "description": "用户ID",
            "default": 1
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "注册时间"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "更新时间"
          },
          "username": {
            "type": "string",
            "description": "用户名",
            "default": "Zero"
          },
          "ip": {
            "type": "string",
            "description": "IP",
            "default": "0.0.0.0"
          },
          "saying": {
            "type": "string",
            "description": "个性签名",
            "default": "这个人很懒，什么都没有写哦"
          },
          "avatar": {
            "type": "string",
            "description": "头像地址",
            "default": "https://avatars.githubusercontent.com"
          }
        },
        "required": ["userID", "createdAt", "updatedAt", "username", "ip", "saying", "avatar"]
      },
      "LoginByUsernamePasswordDataOKResponseDTO": {
        "type": "object",
        "properties": {
          "user": {
            "description": "用户信息",
            "allOf": [
              {
                "$ref": "#/components/schemas/LoginByUsernamePasswordDataUserOKResponseDTO"
              }
            ]
          },
          "access_token": {
            "type": "string",
            "description": "访问令牌"
          }
        },
        "required": ["user", "access_token"]
      },
      "LoginByUsernamePasswordOKResponseDTO": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "description": "HTTP状态码",
            "default": 201
          },
          "code": {
            "type": "number",
            "description": "系统状态码",
            "default": 1000
          },
          "message": {
            "type": "string",
            "description": "信息",
            "default": "登录成功"
          },
          "data": {
            "description": "数据",
            "allOf": [
              {
                "$ref": "#/components/schemas/LoginByUsernamePasswordDataOKResponseDTO"
              }
            ]
          }
        },
        "required": ["statusCode", "code", "message", "data"]
      },
      "RegisterByEmailPasswordBodyDTO": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "邮箱"
          },
          "username": {
            "type": "string",
            "description": "用户名"
          },
          "password": {
            "type": "string",
            "description": "密码",
            "minLength": 6
          },
          "verifyCode": {
            "type": "number",
            "description": "验证码"
          }
        },
        "required": ["email", "username", "password", "verifyCode"]
      },
      "SendEmailVerifyCodeBodyDTO": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "邮箱"
          }
        },
        "required": ["email"]
      },
      "SendEmailVerifyCode201ResDTO": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "object",
            "default": 201
          },
          "code": {
            "type": "object",
            "default": 1012
          },
          "message": {
            "type": "object",
            "default": "发送成功"
          }
        },
        "required": ["statusCode", "code", "message"]
      },
      "SendEmailVerifyCode429ResDTO": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "object",
            "default": 429
          },
          "code": {
            "type": "object",
            "default": 1014
          },
          "message": {
            "type": "object",
            "default": "请求过于频繁，请稍后再试"
          }
        },
        "required": ["statusCode", "code", "message"]
      },
      "GetLoggingUser200ResDTODataUserDTO": {
        "type": "object",
        "properties": {
          "userID": {
            "type": "number"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "ip": {
            "type": "string"
          },
          "saying": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        },
        "required": ["userID", "createdAt", "updatedAt", "username", "ip", "saying"]
      },
      "GetLoggingUser200ResDTODataDTO": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/GetLoggingUser200ResDTODataUserDTO"
          }
        },
        "required": ["user"]
      },
      "GetLoggingUser200ResDTO": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number"
          },
          "code": {
            "type": "number"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/GetLoggingUser200ResDTODataDTO"
          }
        },
        "required": ["statusCode", "code", "message", "data"]
      }
    }
  }
}
